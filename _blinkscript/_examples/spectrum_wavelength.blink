// smoothstep
float smoothstep( float a, float b, float x ) {
  float t = clamp((x - a) / (b - a), 0.0, 1.0);
  return t*t * (3.0f - 2.0f*t);
}

//Journal of Computer Graphics Techniques Vol. 2, No. 2, 2013
//Simple Analytic Approximations to the CIE XYZ Color Matching Functions
//Chris Wyman , Peter-Pike Sloan , Peter Shirley // NVIDIA

//Ported by Guillem Ramisa de Soto | 2020

// Inputs: Wavelength in nanometers
inline float xFit_1931( float wave ){
	float t1 = (wave-442.0f)*((wave<442.0f)?0.0624f:0.0374f);
	float t2 = (wave-599.8f)*((wave<599.8f)?0.0264f:0.0323f);
	float t3 = (wave-501.1f)*((wave<501.1f)?0.0490f:0.0382f);
	return 0.362f*exp(-0.5f*t1*t1) + 1.056f*exp(-0.5f*t2*t2) - 0.065f*exp(-0.5f*t3*t3);
}

inline float yFit_1931( float wave ){
	float t1 = (wave-568.8f)*((wave<568.8f)?0.0213f:0.0247f);
	float t2 = (wave-530.9f)*((wave<530.9f)?0.0613f:0.0322f);
	return 0.821f*exp(-0.5f*t1*t1) + 0.286f*exp(-0.5f*t2*t2);
}

inline float zFit_1931( float wave ){
	float t1 = (wave-437.0f)*((wave<437.0f)?0.0845f:0.0278f);
	float t2 = (wave-459.0f)*((wave<459.0f)?0.0385f:0.0725f);
	return 1.217f*exp(-0.5f*t1*t1) + 0.681f*exp(-0.5f*t2*t2);
}


kernel Wavelength : ImageComputationKernel<ePixelWise>
{
	Image<eWrite> dst;

	param:
		int increments;
		bool raw;

	void define(){
		defineParam(increments, "increment in wavelength(nm)", 511);
		defineParam(raw, "raw / smoothstep", true);
	}

	void process(int2 pos) {
		float totalX = 0.0f;
		float totalY = 0.0f;
		float totalZ = 0.0f;

		for (int i = 0; i < increments; i++) {
			float Xr = xFit_1931( 350.f + i );
			float Yg = yFit_1931( 350.f + i );
			float Zb = zFit_1931( 350.f + i );
			totalX += pos.x == increments-i?Xr:0;
			totalY += pos.x == increments-i?Yg:0;
			totalZ += pos.x == increments-i?Zb:0;
		}
		float X = smoothstep(0.0f, 1.0f, totalX);
		float Y = smoothstep(0.0f, 1.0f, totalY);
		float Z = smoothstep(0.0f, 1.0f, totalZ);

		float4 smoothXYZ = float4(X,Y,Z,1.0f);
		float4 RAWXYZ = float4(totalX,totalY,totalZ,1.0f);

		dst() = raw == true ? RAWXYZ : smoothXYZ;
	}
};